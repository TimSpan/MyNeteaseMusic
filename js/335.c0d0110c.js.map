{"version":3,"file":"js/335.c0d0110c.js","mappings":"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","sources":["webpack://netease_music/./src/api/topList.js","webpack://netease_music/./src/views/topList.vue","webpack://netease_music/./src/views/topList.vue?e495","webpack://netease_music/./src/views/topListMusic/topListMusic.vue","webpack://netease_music/./src/views/topListMusic/topListMusic.vue?b651"],"sourcesContent":["import request from './base'\r\n// 获取所有榜单\r\nexport function getTopList() {\r\n  return request({\r\n    method: 'GET',\r\n    url: '/toplist',\r\n  })\r\n}\r\n//获取榜单歌曲\r\nexport function getTopListSongs(id) {\r\n  return request({\r\n    method: 'GET',\r\n    url: `/playlist/detail?id=${id}`,\r\n  })\r\n}\r\n// 获取歌曲，但是限制数量 ,用于首屏展示\r\nexport function getLimitMusic(data) {\r\n  return request({\r\n    method: 'GET',\r\n    url: `/playlist/track/all?id=${data}&offset=0&limit=3`,\r\n  })\r\n}\r\n// 获取歌曲，但是限制数量 ,用于首屏展示\r\nexport function getLimitMusicTwo(data) {\r\n  return request({\r\n    method: 'GET',\r\n    url: `/playlist/track/all?id=${data}&offset=0&limit=50`,\r\n  })\r\n}","<template>\r\n  <keep-alive>\r\n    <div class=\"top-list\">\r\n      <div class=\"top-list-content\">\r\n        <ul>\r\n          <li v-for=\"item in topList\" :key=\"item.id\">\r\n            <router-link\r\n              class=\"item\"\r\n              :to=\"{\r\n                path: '/topListMusic',\r\n                query: { id: item.id, name: item.name },\r\n              }\"\r\n            >\r\n              <!-- 图片 -->\r\n\r\n              <van-image :src=\"item.coverImgUrl\" lazy-load>\r\n                <template v-slot:loading>\r\n                  <van-loading type=\"spinner\" size=\"20\" />\r\n                </template>\r\n              </van-image>\r\n              <!-- 歌曲 -->\r\n              <ul class=\"song-list\">\r\n                <li\r\n                  class=\"song\"\r\n                  v-for=\"(song, index) in item.songs\"\r\n                  :key=\"song.id\"\r\n                  lazy-load\r\n                >\r\n                  <span>{{ index + 1 }}. </span>\r\n                  <span>{{ song.name }}-{{ song.ar[0].name }}</span>\r\n                </li>\r\n              </ul>\r\n            </router-link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </keep-alive>\r\n</template>\r\n\r\n<script>\r\nimport topListMusic from './topListMusic/topListMusic.vue'\r\nimport { getTopList, getLimitMusic } from '@/api/topList'\r\nexport default {\r\n  components: {\r\n    topListMusic,\r\n  },\r\n  data() {\r\n    return {\r\n      topList: [],\r\n    }\r\n  },\r\n  async created() {\r\n    //获取所有榜单\r\n    const res = await getTopList()\r\n    this.topList = res.data.list\r\n    // console.log(this.topList)\r\n    // console.log(this.AllSongs)\r\n\r\n    this.topList.forEach(async (item, index) => {\r\n      // console.log(index);\r\n      const id = JSON.stringify(item.id)\r\n      // console.log(id);\r\n\r\n      const { data } = await getLimitMusic(id)// 限制了获取3首歌\r\n      // console.log(data);\r\n      this.topList[index].songs = data.songs //要添加进数组的元素\r\n  \r\n    })\r\n  },\r\n  methods: {},\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.top-list {\r\n  position: relative;\r\n  width: 100%;\r\n  // top: 88px;\r\n  bottom: 0;\r\n  margin-bottom: 1.4rem;\r\n  .top-list-content {\r\n    height: 100%;\r\n    overflow: scroll;\r\n    .item {\r\n      display: flex;\r\n      margin: 0 20px;\r\n      padding-top: 20px;\r\n      height: 100px;\r\n      .van-image {\r\n        flex: 0 0 100px;\r\n        width: 100px;\r\n        height: 100px;\r\n      }\r\n      .song-list {\r\n        flex: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        padding: 0 20px;\r\n        height: 100px;\r\n        overflow: scroll;\r\n        background: $color-highlight-background;\r\n        color: $color-text-d;\r\n        font-size: $font-size-small;\r\n        .song {\r\n          @include no-wrap();\r\n          line-height: 26px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./topList.vue?vue&type=template&id=15600d9c&scoped=true\"\nimport script from \"./topList.vue?vue&type=script&lang=js\"\nexport * from \"./topList.vue?vue&type=script&lang=js\"\n\nimport \"./topList.vue?vue&type=style&index=0&id=15600d9c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-15600d9c\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"container\">\r\n    <div class=\"fixed\">\r\n      <div class=\"back\" @click=\"$router.go(-1)\">\r\n        <i class=\"icon-back\"></i>\r\n      </div>\r\n      <!-- 标题 -->\r\n      <h1 class=\"title\">{{ state.name }}</h1>\r\n    </div>\r\n\r\n    <!-- 歌曲列表 -->\r\n\r\n    <div class=\"top-list\">\r\n      <div class=\"top-list-content\">\r\n        <ul>\r\n          <li\r\n            v-for=\"(item, index) in state.topSongs\"\r\n            :key=\"index\"\r\n            class=\"item\"\r\n            @click=\"playMusic(index)\"\r\n          >\r\n            <span class=\"index\">{{ index + 1 }}</span>\r\n            <van-image :src=\"item.al.picUrl\" class=\"img\" lazy-load>\r\n              <template v-slot:loading>\r\n                <van-loading type=\"spinner\" size=\"20\" />\r\n              </template>\r\n            </van-image>\r\n\r\n            <div class=\"right\">\r\n              <p class=\"name\">{{ item.name }}</p>\r\n              <p class=\"singerName\">\r\n                <span v-for=\"(item, i) in item.ar\" :key=\"i\">\r\n                  {{ item.name }}</span\r\n                >\r\n              </p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getLimitMusicTwo } from '@/api/topList'\r\nimport { useRoute } from 'vue-router'\r\nimport { reactive, onMounted } from 'vue'\r\nimport { mapState, mapMutations } from 'vuex'\r\nexport default {\r\n  name: 'MusicMyTopListMusic',\r\n\r\n  setup() {\r\n    const state = reactive({\r\n      topSongs: [], //所有歌曲列表\r\n      name: '',\r\n    })\r\n    onMounted(async () => {\r\n      let topID = useRoute().query.id\r\n      state.name = useRoute().query.name\r\n      let res = await getLimitMusicTwo(topID)\r\n      // console.log(res)\r\n      state.topSongs = res.data.songs\r\n      // console.log(state.topSongs)\r\n    })\r\n    return { state }\r\n  },\r\n  computed: {\r\n    ...mapState(['playList', 'playListIndex', 'currentTime', 'lyricList']),\r\n  },\r\n  methods: {\r\n    playMusic: function (index) {\r\n      // 接收传递过来的歌曲下标\r\n      this.updatePlayList(this.state.topSongs) // 更新vuex 的歌曲列表\r\n      this.updatePlayListIndex(index) // 更新vuex 的歌曲歌曲下标\r\n      this.updateIsBtnShow(false) // 更新播放按钮的布尔值\r\n      this.$store.dispatch('getLyric', this.playList[this.playListIndex].id) // 更新歌词\r\n    },\r\n    ...mapMutations([\r\n      'updatePlayList',\r\n      'updatePlayListIndex',\r\n      'updateIsBtnShow',\r\n    ]),\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  .fixed {\r\n    position: fixed;\r\n    background-color: #333;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 0.8rem;\r\n    z-index: 100;\r\n    margin-bottom: 0.8rem;\r\n    // overflow: scroll;\r\n    .back {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0.12rem;\r\n      z-index: 20;\r\n      transform: translateZ(2px);\r\n\r\n      .icon-back {\r\n        display: block;\r\n        line-height: 40px;\r\n        padding-left: 0.2rem;\r\n        font-size: $font-size-large-x;\r\n        color: $color-theme;\r\n      }\r\n    }\r\n    .title {\r\n      position: relative;\r\n      // padding-left: 0.4rem;\r\n      top: 0;\r\n      left: 20%;\r\n      width: 60%;\r\n      z-index: 20;\r\n      transform: translateZ(2px);\r\n      text-align: center;\r\n      line-height: 40px;\r\n      font-size: $font-size-large;\r\n      color: $color-theme;\r\n    }\r\n  }\r\n\r\n  .top-list {\r\n    margin-bottom: 2.4rem;\r\n    position: relative;\r\n    top: 0.8rem;\r\n    .top-list-content {\r\n      .item {\r\n        display: flex; // flex布局\r\n        align-items: center;\r\n\r\n        margin-top: 0.6rem;\r\n        height: 0.6rem;\r\n        .index {\r\n          margin-right: 0.2rem;\r\n          margin-left: 0.2rem;\r\n          color: $color-theme;\r\n          width: 0.4rem;\r\n          text-align: center;\r\n        }\r\n\r\n        .van-image {\r\n          // flex: 0 0 0.6rem;\r\n          width: 1rem;\r\n          height: 1rem;\r\n          background-size: cover;\r\n          border-radius: 3px !important;\r\n        }\r\n\r\n        .right {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          line-height: 0.5rem;\r\n          font-size: 0.2rem;\r\n          margin-left: 0.4rem;\r\n          @include no-wrap();\r\n          .name {\r\n          }\r\n          .singerName {\r\n            display: flex;\r\n            span {\r\n              margin-right: 0.4rem;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./topListMusic.vue?vue&type=template&id=75c9b387&scoped=true\"\nimport script from \"./topListMusic.vue?vue&type=script&lang=js\"\nexport * from \"./topListMusic.vue?vue&type=script&lang=js\"\n\nimport \"./topListMusic.vue?vue&type=style&index=0&id=75c9b387&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-75c9b387\"]])\n\nexport default __exports__"],"names":["getTopList","request","method","url","getLimitMusic","data","getLimitMusicTwo","class","_createBlock","_KeepAlive","_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","$data","topList","item","key","id","_createVNode","_component_router_link","to","name","default","_withCtx","_component_van_image","src","coverImgUrl","loading","_component_van_loading","type","size","_","_hoisted_3","songs","song","index","_toDisplayString","ar","components","topListMusic","created","res","this","list","forEach","async","JSON","stringify","methods","__exports__","render","onClick","_cache","$event","_ctx","$router","go","$setup","state","_hoisted_4","_hoisted_5","topSongs","$options","playMusic","_hoisted_7","al","picUrl","_hoisted_8","_hoisted_9","_hoisted_10","i","_hoisted_6","setup","reactive","onMounted","topID","useRoute","query","computed","mapState","updatePlayList","updatePlayListIndex","updateIsBtnShow","$store","dispatch","playList","playListIndex","mapMutations"],"sourceRoot":""}